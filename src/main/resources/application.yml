server:
  port: 7576

spring:
  application:
    name: tiedyer-backend
  profiles:
    active: dev    # dev-开发环境 prod-生成环境
  data:
    # redis 配置
    redis:
      timeout: 5000ms   # 连接超时时间
      lettuce:
        pool:
          max-active: 20    # 连接池最大连接数（使用负值表示没有限制）
          max-idle: 10      # 连接池中的最大空闲连接
          min-idle: 5       # 连接池中的最小空闲连接
          max-wait: 5000ms  # 连接池最大阻塞等待时间（使用负值表示没有限制）
  # rabbitMQ 配置
  rabbitmq:
    listener:
      simple:
        prefetch: 1
        acknowledge-mode: auto    # none,关闭ack; manual,手动ack; auto: 自动ack
        retry:
          enabled: true          # 开启消费者失败重试
          initial-interval: 1000 # 初始的失败等待时长为1秒
          multiplier: 1          # 下次失败的等待时长倍数，下次等待时长 = multiplier * last-interval
          max-attempts: 3        # 最大重试次数
          stateless: true        # true无状态； false有状态。如果业务中包含事务，这里改为false
  # 数据库配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    druid:
      # 配置druid连接池
      initial-size: 5 # 初始化数量
      min-idle: 5     # 最小连接数
      max-active: 20  # 最大连接数
      max-wait: 60000 # 获取连接等待超时的时间
      time-between-eviction-runs-millis: 60000 # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      min-evictable-idle-time-millis: 30000 # 配置一个连接在池中最小生存的时间，单位是毫秒
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: true
      test-on-return: false
      pool-prepared-statements: true # 是否缓存preparedStatement
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，wall用于防火墙
      filter:
        config:
          enabled: false
      web-stat-filter:
        enabled: false
      stat-view-servlet:
        enabled: false

my-token:
  token-name: Authorization #token名字，包括redis的前缀，请求头读取的属性名,默认Authorization
  refresh-token:
    exp: 5184000    # RefreshToken过期时间(秒),默认5184000秒(60天)
  jwt:
    secret: 9J1/Jb0eHIMPqG8wDfBsLvDHWc4abRYsKJqYsjY4oSk= # JWT 签名密钥，需要自己生成
    exp: 7200     # JWT 过期时间(秒)，默认7200秒(2天)


api:
  # 微信登录API
  # 需要申请微信一键登录的API，否则将导致无法使用微信一键登录功能
  wx:
    appId: wxecd0ce3eb243cc75     # 填入appId
    secret: 6962c3b59df2eb5dd9d6cbfe1633d586    # T 填入secret
    grantType: authorization_code



mybatis-plus:
  global-config:
    db-config:
      logic-delete-value: 1       # 逻辑已删除
      logic-not-delete-value: 0   # 逻辑未删除
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

management:
  endpoints:
    web:
      exposure:
        include: '*'