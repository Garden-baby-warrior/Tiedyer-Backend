server:
  port: 7576

spring:
  application:
    name: tiedyer-backend
  profiles:
    active: dev
  data:
    # redis 配置
    redis:
      timeout: 5000ms   # 连接超时时间
      lettuce:
        pool:
          max-active: 20    # 连接池最大连接数（使用负值表示没有限制）
          max-idle: 10      # 连接池中的最大空闲连接
          min-idle: 5       # 连接池中的最小空闲连接
          max-wait: 5000ms  # 连接池最大阻塞等待时间（使用负值表示没有限制）
  # rabbitMQ 配置
  rabbitmq:
    listener:
      simple:
        prefetch: 1
        acknowledge-mode: auto    # none,关闭ack; manual,手动ack; auto: 自动ack
        retry:
          enabled: true          # 开启消费者失败重试
          initial-interval: 1000 # 初始的失败等待时长为1秒
          multiplier: 1          # 下次失败的等待时长倍数，下次等待时长 = multiplier * last-interval
          max-attempts: 3        # 最大重试次数
          stateless: true        # true无状态； false有状态。如果业务中包含事务，这里改为false
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.zaxxer.hikari.HikariDataSource
    # hikari连接池配置
    hikari:
      #连接池名
      pool-name: HikariCP
      #最小空闲连接数
      minimum-idle: 5
      # 空闲连接存活最大时间，默认10分钟
      idle-timeout: 600000
      # 连接池最大连接数，默认是10
      maximum-pool-size: 10
      # 此属性控制从池返回的连接的默认自动提交行为,默认值：true
      auto-commit: true
      # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认30分钟
      max-lifetime: 1800000
      # 数据库连接超时时间,默认30秒
      connection-timeout: 30000
      # 连接测试query
      connection-test-query: SELECT 1



my-token:
  token-name: Authorization #token名字，包括redis的前缀，请求头读取的属性名,默认Authorization
  refresh-token:
    exp: 5184000    # RefreshToken过期时间(秒),默认5184000秒(60天)
  jwt:
    secret: --secret-- # TODO JWT 签名密钥，需要自己生成=>Jwts.SIG.HS256.key().build();
    exp: 7200     # JWT 过期时间(秒)，默认7200秒(2小时)


api:
  # 微信登录API
  # 需要申请微信一键登录的API，否则将导致无法使用微信一键登录功能
  wx:
    appId: --secret--     # TODO 填入appId
    secret: --secret--    # TODO 填入secret
    grantType: authorization_code



mybatis-plus:
  global-config:
    db-config:
      logic-delete-value: 1       # 逻辑已删除
      logic-not-delete-value: 0   # 逻辑未删除
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

management:
  endpoints:
    web:
      exposure:
        include: '*'